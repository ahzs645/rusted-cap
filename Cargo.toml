[package]
name = "cap-electron-capture"
version = "0.1.0"
edition = "2021"
description = "Cross-platform screen capture and audio processing library for Electron applications"
authors = ["Cap Team"]
license = "MIT"
repository = "https://github.com/cap-so/cap"

[lib]
name = "cap_electron_capture"
crate-type = ["cdylib", "rlib"]

[dependencies]
# Core dependencies from Cap
cidre = { git = "https://github.com/yury/cidre", rev = "ef04aaabe14ffbbce4a330973a74b6d797d073ff" }
ffmpeg = { package = "ffmpeg-next", git = "https://github.com/CapSoftware/rust-ffmpeg", rev = "49db1fede112" }
scap = { git = "https://github.com/CapSoftware/scap", rev = "b914379d787f" }
tokio = { version = "1.39.3", features = ["macros", "rt-multi-thread", "sync", "time"] }
log = "0.4"

# Core async runtime
futures = "0.3"

# Audio processing
cpal = { git = "https://github.com/RustAudio/cpal", rev = "f43d36e55494993bbbde3299af0c53e5cdf4d4cf" }
hound = "3.5"

# FFmpeg for audio/video encoding (Cap's fork)
ffmpeg-sys-next = { version = "7.1.0", features = ["build"] }

# S3 and cloud storage
aws-sdk-s3 = "1.0"
aws-config = "1.0"

# FFI for Node.js integration
napi = { version = "2.0", features = ["async"] }
napi-derive = "2.0"

# Cross-platform utilities
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
anyhow = "1.0"
thiserror = "1.0"
env_logger = "0.10"
uuid = { version = "1.0", features = ["v4"] }
lazy_static = "1.4"

# Platform-specific dependencies
[target.'cfg(target_os = "macos")'.dependencies]
cidre = { git = "https://github.com/yury/cidre", rev = "ef04aaabe14ffbbce4a330973a74b6d797d073ff" }
# ðŸŽ¯ REAL Cap dependencies for system audio capture
screencapturekit = { git = "https://github.com/CapSoftware/screencapturekit-rs", rev = "7ff1e103742e56c8f6c2e940b5e52684ed0bed69" }
core-foundation = "0.9"
core-graphics = "0.23"
objc = "0.2"
cocoa = "0.24"

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.52", features = [
    "Win32_Graphics_Gdi",
    "Win32_UI_WindowsAndMessaging",
    "Win32_Media_Audio",
    "Win32_Media_MediaFoundation",
    "Win32_System_Threading",
    "Win32_System_Com",
] }

[target.'cfg(target_os = "linux")'.dependencies]
pipewire = "0.7"
libpulse-binding = "2.27"

[features]
default = ["audio-encoding", "video-encoding"]
audio-encoding = []
video-encoding = []

[build-dependencies]
napi-build = "2.0"
